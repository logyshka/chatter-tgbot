from loader import dp, Message, User, IsAdmin, Statistic, ContainerSubscriptions, Promocode
from bot.keyboards import close

@dp.message_handler(lambda message: IsAdmin(message)() and message.text == "/admin")
async def ADMIN_OPEN(message: Message):
    await message.answer(text="<i>üëë –ü—Ä–∏–≤–µ—Ç—Å—Ç–≤—É—é –≤–∞—Å, –º–æ–π –ø–æ–≤–µ–ª–∏—Ç–µ–ª—å!</i>\n\n"
                              "<i>‚óæ –î–æ—Å—Ç—É–ø–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã:</i>\n\n"
                              "<b>‚ûñ <code>/ban user_id</code> | –ø–µ—Ä–º–∞–Ω–µ–Ω—Ç–Ω—ã–π –±–∞–Ω</b>\n"
                              "<b>‚ûñ <code>/warn user_id during</code> | –≤—Ä–µ–º–µ–Ω–Ω—ã–π –±–∞–Ω (during –≤ —á–∞—Å–∞—Ö)</b>\n"
                              "<b>‚ûñ <code>/unban user_id</code> | —Å–Ω—è—Ç–∏–µ –±–∞–Ω–∞/–º—É—Ç–∞</b>\n"
                              "<b>‚ûñ <code>/spam + –æ—Ç–≤–µ—Ç –Ω–∞ —Å–æ–æ–±—â–µ–Ω–∏–µ</code> | —Ä–∞—Å—Å—ã–ª–∫–∞</b>\n"
                              "<b>‚ûñ <code>/stat</code> | —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞</b>\n"
                              "<b>‚ûñ <code>/set sub_name sub_price</code> | —Å–º–µ–Ω–∞ —Ü–µ–Ω—ã –Ω–∞ –ø–æ–¥–ø–∏—Å–∫—É</b>\n"
                              "<b>‚ûñ <code>/new promo body sub_bonus(–≤ —á–∞—Å–∞—Ö) activations</code> | —Å–æ–∑–¥–∞—Ç—å –ø—Ä–æ–º–æ–∫–æ–¥</b>\n"
                              "<b>‚ûñ <code>/promo</code> | –ø–æ–∫–∞–∑–∞—Ç—å –¥–µ–π—Å—Ç–≤—É—é—â–∏–µ –ø—Ä–æ–º–æ–∫–æ–¥—ã</b>\n"
                              "<b>‚ûñ <code>/delete promo</code> | —É–¥–∞–ª–∏—Ç—å –ø—Ä–æ–º–æ–∫–æ–¥</b>\n",
                         reply_markup=close)
    await message.delete()

@dp.message_handler(lambda message: IsAdmin(message)(), regexp="/ban \d+")
async def BAN_USER(message: Message):
    user_id = message.text.replace("/ban ", "")
    try:
        user = User(user_id)
        user.get_ban()
        await message.answer(text=f"<i>‚úÖ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å <code>id{user_id}</code> –±—ã–ª —É—Å–ø–µ—à–Ω–æ –∑–∞–±–∞–Ω–µ–Ω!</i>",
                             reply_markup=close)
    except:
        await message.answer(text=f"<i>‚ö† –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å <code>id{user_id}</code> –∑–∞–±–∞–Ω–µ–Ω –Ω–µ –±—ã–ª!</i>\n\n"
                                  f"<b>ü§∑‚Äç‚ôÇ <u>–ü—Ä–∏—á–∏–Ω–∞:</u> <code>–Ω–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π user_id</code></b>",
                             reply_markup=close)
    finally:
        await message.delete()

@dp.message_handler(lambda message: IsAdmin(message)(), regexp="/unban \d+")
async def UNBAN_USER(message: Message):
    user_id = message.text.replace("/unban ", "")
    try:
        user = User(user_id)
        user.get_unban()
        await message.answer(text=f"<i>‚úÖ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å <code>id{user_id}</code> –±—ã–ª —É—Å–ø–µ—à–Ω–æ —Ä–∞–∑–±–∞–Ω–µ–Ω!</i>",
                             reply_markup=close)
    except:
        await message.answer(text=f"<i>‚ö† –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å <code>id{user_id}</code> —Ä–∞–∑–±–∞–Ω–µ–Ω –Ω–µ –±—ã–ª!</i>\n\n"
                                  f"<b>ü§∑‚Äç‚ôÇ <u>–ü—Ä–∏—á–∏–Ω–∞:</u> <code>–Ω–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π user_id</code></b>",
                             reply_markup=close)
    finally:
        await message.delete()

@dp.message_handler(lambda message: IsAdmin(message)(), regexp="/mute \d+ \d+")
async def MUTE_USER(message: Message):
    user_id, during = message.text.replace("/mute ", "").split(" ")
    try:
        user = User(user_id)
        user.admin_get_warn(int(during))
        await message.answer(text=f"<i>‚úÖ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å <code>id{user_id}</code> –±—ã–ª —É—Å–ø–µ—à–Ω–æ –∑–∞–±–∞–Ω–µ–Ω –¥–æ {user.banned_for}!</i>",
                             reply_markup=close)
    except:
        await message.answer(text=f"<i>‚ö† –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å <code>id{user_id}</code> –∑–∞–±–∞–Ω–µ–Ω –Ω–µ –±—ã–ª!</i>\n\n"
                                  f"<b>ü§∑‚Äç‚ôÇ <u>–ü—Ä–∏—á–∏–Ω–∞:</u> <code>–Ω–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π user_id –∏–ª–∏ during</code></b>",
                             reply_markup=close)
    finally:
        await message.delete()

@dp.message_handler(lambda message: IsAdmin(message)(), commands=["spam"])
async def SPAM(message: Message):
    if message.reply_to_message:
        message1 = await message.reply_to_message.reply(text="<i>‚úÖ –†–∞—Å—Å—ã–ª–∫–∞ —Å–æ–æ–±—â–µ–Ω–∏—è —É—Å–ø–µ—à–Ω–æ –Ω–∞—á–∞–ª–∞—Å—å!</i>")
        success = 0
        failure = 0
        for user_id in User.get_all():
            try:
                await message.reply_to_message.copy_to(chat_id=user_id)
                success += 1
            except:
                failure += 1
        await message1.delete()
        await message.answer(text=f"<i>‚úÖ –†–∞—Å—Å—ã–ª–∫–∞ –∑–∞–∫–æ–Ω—á–∏–ª–∞—Å—å —É—Å–ø–µ—à–Ω–æ!</i>\n\n"
                                  f"<b><u>üìä –†–µ–∑—É–ª—å—Ç–∞—Ç—ã —Ä–∞—Å—Å—ã–ª–∫–∏:</u></b>\n\n"
                                  f"<b>üëåüèª –£—Å–ø–µ—Ö:</b> <code>{success}</code>\n\n"
                                  f"<b>ü§¨ –ü—Ä–æ–≤–∞–ª:</b> <code>{failure}</code>",
                             reply_markup=close)
        await message.delete()

@dp.message_handler(lambda message: IsAdmin(message)(), commands=["stat"])
async def STAT(message: Message):
    user_stat = Statistic.users_amount()
    conversation_stat = Statistic.conversations_amount()
    await message.answer(text=f"<i>üë• –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –≤ –ø—Ä–æ–µ–∫—Ç–µ: <code>{user_stat.get('all_users')}</code></i>\n\n"
                              f"<i>ü•∂ –ó–∞–±–∞–Ω–µ–Ω–Ω—ã—Ö: <code>{user_stat.get('banned_users')}</code></i>\n\n"
                              f"<i>ü•µ –°–≤–æ–±–æ–¥–Ω—ã—Ö: <code>{user_stat.get('free_users')}</code></i>\n"
                              f"‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ\n"
                              f"<i>üí¨ –î–∏–∞–ª–æ–≥–æ–≤ –≤—Å–µ–≥–æ: <code>{conversation_stat.get('amount')}</code></i>\n\n"
                              f"<i>üìÖ –û–±—â–∞—è –¥–ª–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å: <code>{conversation_stat.get('total_during')}</code></i>\n\n"
                              f"<i>üïê –°—Ä–µ–¥–Ω—è—è –¥–ª–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å: <code>{conversation_stat.get('average_during')}</code></i>\n\n",
                         reply_markup=close)
    await message.delete()

@dp.message_handler(lambda message: IsAdmin(message)(), regexp="/set ([\w_]+) \d+")
async def MUTE_USER(message: Message):
    sub_type, new_price = message.text.split(" ")[1:]
    try:
        ContainerSubscriptions.get(sub_type).edit_subscription(new_price)
        await message.answer(
            text=f"<i>‚úÖ –¶–µ–Ω–∞ –Ω–∞ –ø–æ–¥–ø–∏—Å–∫—É <code>{sub_type}</code> –±—ã–ª–∞ –∏–∑–º–µ–Ω–µ–Ω–∞!</i>",
            reply_markup=close)
    except:
        await message.answer(
            text=f"<i>‚ö† –¶–µ–Ω–∞ –Ω–∞ –ø–æ–¥–ø–∏—Å–∫—É <code>{sub_type}</code> –Ω–µ –±—ã–ª–∞ –∏–∑–º–µ–Ω–µ–Ω–∞!</i>",
            reply_markup=close)
    finally:
        await message.delete()

@dp.message_handler(lambda message: IsAdmin(message)(), regexp="/new promo .+ [\d.]+ \d+")
async def NEW_PROMO(message: Message):
    promo, bonus, max = message.text.split(" ")[2:]
    promo = Promocode.create(promo, bonus, max)
    if promo:
        await message.answer(f"<i>‚úÖ –ü—Ä–æ–º–æ–∫–æ–¥ <code>{promo}</code> —É—Å–ø–µ—à–Ω–æ —Å–æ–∑–¥–∞–Ω!</i>")
    else:
        await message.answer(f"<i>‚ö† –ü—Ä–æ–º–æ–∫–æ–¥ –Ω–µ —Å–æ–∑–¥–∞–Ω!</i>")
    await message.delete()

@dp.message_handler(lambda message: IsAdmin(message)() and message.text == "/promo")
async def NEW_PROMO(message: Message):
    promos = Promocode.get_all()
    text = ""
    for i in promos:
        promo = Promocode(i[0])
        text += f"<i>PROMO: <code>{promo.promo}</code>\n</i>"
        text += f"<i>BONUS: <code>+{promo.subscription_bonus} hours</code>\n</i>"
        text += f"<i>USED: <code>{len(promo.activations)}/{promo.max_activations}</code>\n</i>"
        text += "‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ\n"
    await message.answer(text=text,
                         reply_markup=close)
    await message.delete()

@dp.message_handler(lambda message: IsAdmin(message)(), regexp="/delete .+$")
async def DELETE_PROMO(message: Message):
    result = Promocode.delete(message.text.split(" ")[1])
    if result:
        await message.answer(f"<i>‚úÖ –ü—Ä–æ–º–æ–∫–æ–¥ —É—Å–ø–µ—à–Ω–æ —É–¥–∞–ª—ë–Ω!</i>")
    else:
        await message.answer(f"<i>‚ö† –ü—Ä–æ–º–æ–∫–æ–¥ –Ω–µ —É–¥–∞–ª—ë–Ω!</i>")
    await message.delete()
